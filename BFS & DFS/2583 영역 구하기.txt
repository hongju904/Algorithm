from collections import deque
M, N, K = map(int, input().split())

dx = [0,0,1,-1]
dy = [1,-1,0,0]

def bfs(graph, a,b):
    queue = deque():
    queue.append((a,b))
    graph[a][b] = 1
    count = 1

    while queue:
        x, y = queue.popleft()
        for i in range(4):
            nx = x+dx[i]
            ny = y+dy[i]
            if nx<0 or nx>=M or ny<0 or ny>=N:
                continue
            if graph[nx][ny] == 0:
                graph[nx][ny] = 1
                queue.append((nx, ny))
                count += 1
    return count

graph = [[0]*N for i in range(M)]
for k in range(K):
    x1,x2,y1,y2 = map(int, input().split())
    for i in range(y1, y2):
        for j in range(x1,x2):
            graph[i][j] = 1

result = []
for i in range(M):
    for j in range(N):
        if graph[i][j] == 0:
            result.append(bfs(graph, i, j))

print(len(result))
result.sort()
for i in result:
    print(i, end=" ")